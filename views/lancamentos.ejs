<!DOCTYPE html>
<html lang="pt-br">

<head>
  <meta charset="UTF-8">
  <title>Realizar Lançamento - <%= user.nome %>
  </title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      background-color: #4A9EDA;
    }

    .form-container {
      background-color: white;
      border-radius: 10px;
      padding: 60px 80px;
      margin: 50px auto;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      height: auto;
      max-width: 1100px;
    }

    .form-container label {
      margin-bottom: 20px;
      margin-top: 10px;
      display: inline-block;
    }

    .categoria-btn {
      background-color: #d9e1ec;
      border: none;
      padding: 20px 50px;
      border-radius: 10px;
      cursor: pointer;
      transition: 0.2s;
    }

    .categoria-btn:hover {
      background-color: #c0cce0;
    }

    .categoria-selecionada {
      background-color: #a6bbd8;
    }

    .icon-img {
      width: 60px;
      height: 30px;
    }

    .footer-img,
    .header-img {
      display: block;
      margin: auto;
    }

    .btn-enviar {
      width: 250px;
      background-color: #b0c4de;
      color: white;
      border-radius: 8px;
      padding: 10px;
      border: none;
      margin-top: 10px;
    }

    .btn-enviar:hover {
      background-color: #90b0d0;
    }

    .btn-voltar {
      background-color: #6c757d;
      color: white;
      border-radius: 8px;
      padding: 8px 20px;
      text-decoration: none;
      display: inline-block;
    }

    .btn-voltar:hover {
      background-color: #5a6268;
    }

    .btn-check:checked + .btn-outline-primary,
    .btn-check:checked + .btn-outline-danger {
      background-color: #a6bbd8;
      color: white;
    }
  </style>
</head>

<body>
  <!-- Header -->
  <img src="/images/logo.png" alt="Logo TFinance" class="header-img mt-3">

  <div class="container form-container">
    <div class="mb-3 text-start">
      <a href="/v1/menu" class="btn-voltar">← Voltar ao Menu</a>
    </div>

    <h4 class="text-center">Realizar Lançamento</h4>

    <div id="errorMessage" class="alert alert-danger" style="display:none;"></div>
    <div id="successMessage" class="alert alert-success" style="display:none;"></div>

    <!-- Formulário -->
    <form id="lancamentoForm">
      <!-- Valor -->
      <div class="mb-3">
        <label>Valor</label>
        <input type="number" step="0.01" name="valor" placeholder="R$ 0,00" class="form-control" required>
      </div>

      <!-- Data -->
      <div class="mb-3">
        <label>Escolha uma Data</label>
        <input type="date" name="data" class="form-control" required>
      </div>

      <!-- Tipo de Lançamento -->
      <div class="mb-3">
        <label>Tipo de Lançamento</label>
        <div class="d-flex gap-3">
          <input type="radio" class="btn-check" name="tipo" id="tipo-receita" value="Receita" required>
          <label class="btn btn-outline-primary" for="tipo-receita">Receita</label>
          <input type="radio" class="btn-check" name="tipo" id="tipo-despesa" value="Despesa" required>
          <label class="btn btn-outline-danger" for="tipo-despesa">Despesa</label>
        </div>
      </div>

      <!-- Categorias -->
      <div class="mb-3">
        <label>Categorias</label>
        <div class="d-flex justify-content-between flex-wrap gap-2">
          <button type="button" class="categoria-btn" id="btn-Alimentacao" data-categoria onclick="selecionarCategoria('Alimentacao')">
            <img src="/icones/alimentacao.png" class="icon-img" alt="Alimentação"><br><small>Alimentação</small>
          </button>
          <button type="button" class="categoria-btn" id="btn-Investimento" data-categoria onclick="selecionarCategoria('Investimento')">
            <img src="/icones/investimento.png" class="icon-img" alt="Investimento"><br><small>Investimento</small>
          </button>
          <button type="button" class="categoria-btn" id="btn-Fatura" data-categoria onclick="selecionarCategoria('Fatura')">
            <img src="/icones/fatura.png" class="icon-img" alt="Fatura"><br><small>Fatura</small>
          </button>
          <button type="button" class="categoria-btn" id="btn-DespesaCategoria" data-categoria onclick="selecionarCategoria('Despesa')">
            <img src="/icones/despesa.png" class="icon-img" alt="Despesa Pessoal"><br><small>Despesa Pessoal</small>
          </button>
          <button type="button" class="categoria-btn" id="btn-Outros" data-categoria onclick="selecionarCategoria('Outros')">
            <img src="/icones/outros.png" class="icon-img" alt="Outros"><br><small>Outros</small>
          </button>
        </div>
        <!-- Campo oculto para categoria -->
        <input type="hidden" name="categoria" id="categoria">
      </div>

      <!-- Comentário -->
      <div class="mb-3">
        <label>Comentário</label>
        <input type="text" name="comentario" maxlength="140" placeholder="Máx. 140 caracteres" class="form-control">
      </div>

      <!-- Botão Enviar -->
      <div class="text-center">
        <button type="submit" class="btn-enviar">ENVIAR</button>
      </div>
    </form>
  </div>

  <!-- Footer -->
  <img src="/images/logo.png" alt="Logo TFinance" class="footer-img my-3">

  <!-- Bootstrap JS -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script>

    function selecionarCategoria(cat) {
      // Limpar seleções anteriores
      document.querySelectorAll('.categoria-btn').forEach(btn => {
        btn.classList.remove('categoria-selecionada');
      });
      
      // Selecionar nova categoria
      document.getElementById('categoria').value = cat;
      document.getElementById('btn-' + cat).classList.add('categoria-selecionada');
      
      // Esconder mensagens de erro se existirem
      const errorBox = document.getElementById('errorMessage');
      if (errorBox.style.display === 'block') {
        errorBox.style.display = 'none';
      }
    }

    // Intercepta a submissão do formulário para enviar via fetch com header Authorization
    const lancamentoForm = document.getElementById('lancamentoForm');
    const errorBox = document.getElementById('errorMessage');
    const successBox = document.getElementById('successMessage');

    lancamentoForm.addEventListener('submit', async (e) => {
      e.preventDefault();

      // Recupera o token JWT do localStorage
      const token = localStorage.getItem('authToken');
      if (!token) {
        alert('Token não encontrado. Faça login novamente.');
        window.location.href = '/v1/login';
        return;
      }

      const formData = new FormData(lancamentoForm);

      const valor = formData.get('valor');
      const data = formData.get('data');
      const tipo = formData.get('tipo');
      const categoria = formData.get('categoria');
      const comentario = formData.get('comentario');

      // Validação de campos obrigatórios
      if (!valor || parseFloat(valor) <= 0) {
        mostrarErro('Informe um valor válido maior que zero.');
        return;
      }

      if (!data) {
        mostrarErro('Selecione uma data.');
        return;
      }

      if (!tipo) {
        mostrarErro('Selecione se é Receita ou Despesa.');
        return;
      }
      const payload = {
        valor: parseFloat(valor).toFixed(2),
        data: data,
        tipo: tipo,
        categoria: categoria || null, //categoria pode ser vazia
        comentario: comentario || null
      };

      try {
        const res = await fetch('/v1/lancamentos', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': 'Bearer ' + token
          },
          body: JSON.stringify(payload)
        });

        const result = await res.json();

        if (!res.ok) {
          mostrarErro(result.error || 'Erro ao inserir lançamento.');
        } else {
          mostrarSucesso(result.message || 'Lançamento realizado com sucesso!');
          
          // Limpar formulário
          lancamentoForm.reset();
          
          // Limpar seleção de categoria
          document.querySelectorAll('.categoria-btn').forEach(btn => {
            btn.classList.remove('categoria-selecionada');
          });
          document.getElementById('categoria').value = '';
          
          // Redireciona para o menu após 2 segundos
          setTimeout(() => {
            window.location.href = '/v1/menu';
          }, 2000);
        }
      } catch (error) {
        console.error('Erro na requisição:', error);
        alert('Erro de conexão. Tente novamente.');
      }
    });

    function mostrarErro(mensagem) {
      errorBox.style.display = 'block';
      errorBox.textContent = mensagem;
      successBox.style.display = 'none';
    }

    function mostrarSucesso(mensagem) {
      successBox.style.display = 'block';
      successBox.textContent = mensagem;
      errorBox.style.display = 'none';
    }
  </script>
</body>
</html>